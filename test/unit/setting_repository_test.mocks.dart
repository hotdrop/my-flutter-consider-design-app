// Mocks generated by Mockito 5.1.0 from annotations
// in mybt/test/unit/setting_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mybt/repository/local/setting_dao.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [SettingDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingDao extends _i1.Mock implements _i2.SettingDao {
  MockSettingDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String?> getUserId() =>
      (super.noSuchMethod(Invocation.method(#getUserId, []),
          returnValue: Future<String?>.value()) as _i3.Future<String?>);
  @override
  _i3.Future<String?> getNickName() =>
      (super.noSuchMethod(Invocation.method(#getNickName, []),
          returnValue: Future<String?>.value()) as _i3.Future<String?>);
  @override
  _i3.Future<String?> getEmail() =>
      (super.noSuchMethod(Invocation.method(#getEmail, []),
          returnValue: Future<String?>.value()) as _i3.Future<String?>);
  @override
  _i3.Future<String?> getStringValue(String? key) =>
      (super.noSuchMethod(Invocation.method(#getStringValue, [key]),
          returnValue: Future<String?>.value()) as _i3.Future<String?>);
  @override
  _i3.Future<void> save({String? userId, String? nickName, String? email}) =>
      (super.noSuchMethod(
          Invocation.method(
              #save, [], {#userId: userId, #nickName: nickName, #email: email}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
}
